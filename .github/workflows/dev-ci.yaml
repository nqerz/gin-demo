name: Release CI

on:
  push:
    tags:
      - "v*.*.*"
  # pull_request:
  #   branches: [main]
  #   types: [closed]

  workflow_dispatch:

env:
  DOCKER_REGISTRY: docker.io/${{ secrets.DOCKER_UERNAME }}

jobs:
  build_image:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKER_REGISTRY }}/gin-demo
          tags: |
            type=semver,pattern={{version}}

      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          # registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_UERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          logout: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: build image
      #   run: |
      #     make pre-build
      #     GITHUB_BRANCH=$(echo $GITHUB_REF | sed -e "s#refs/tags/##g")
      #     GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)
      #     docker build -t gin-demo:$GITHUB_BRANCH .
      #     docker tag gin-demo:$GITHUB_BRANCH ${{ secrets.DOCKER_UERNAME }}/gin-demo:sha-$GITHUB_SHA_SHORT
      #     docker tag gin-demo:$GITHUB_BRANCH ${{ secrets.DOCKER_UERNAME }}/gin-demo:$GITHUB_BRANCH
      #     docker push ${{ secrets.DOCKER_UERNAME }}/gin-demo:sha-$GITHUB_SHA_SHORT
      #     docker push ${{ secrets.DOCKER_UERNAME }}/gin-demo:$GITHUB_BRANCH

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: "${{ secrets.DOCKER_UERNAME }}/gin-demo:sha-$GITHUB_SHA_SHORT"
      #     format: "table"
      #     exit-code: "1"
      #     ignore-unfixed: true
      #     vuln-type: "os,library"
      #     severity: "CRITICAL"

      # - name: Trigger CI
      #   if: success()
      #   uses: InformaticsMatters/trigger-ci-action@86a187932ffa16df10523eeb341cd216e349bc61
      #   with:
      #     ci-owner: ${{ secrets.GITHBU_USER }}
      #     ci-repository: gin-demo-manifests
      #     ci-ref: refs/heads/main
      #     ci-user: ${{ secrets.GITHBU_USER }}
      #     ci-user-token: ${{ secrets.CI_TOKEN }}
      #     ci-name: BOT-CI
      #     ci-inputs: >-
      #       image=${{ env.DOCKER_REGISTRY }}/gin-demo
      #       tag=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
      #       env=dev
      #       src=dev
